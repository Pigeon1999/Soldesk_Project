<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="com.team3.rc_pro.mapper.UserInfoMapper">

	<resultMap id="authorityinfoMap" type="com.team3.rc_pro.domain.AuthorityInfoVO">
		<result property="user_id" column="USER_ID"/>
		<result property="user_authority" column="USER_AUTHORITY"/>
	</resultMap>

	<resultMap id="userinfoMap" type="com.team3.rc_pro.domain.UserInfoVO">
		<result property="user_num" column="user_num" />
		<result property="user_name" column="user_name" />
		<result property="user_birth" column="user_birth" />
		<result property="user_pn" column="user_pn"/>
		<result property="user_address" column="user_address"/>
		<result property="user_email" column="user_email"/>
		<result property="user_id" column="user_id"/>
		<result property="user_passwd" column="user_passwd"/>
		<result property="user_regdate" column="user_regDate"/>
		
		<collection property="authorityList" resultMap="authorityinfoMap"/>
	</resultMap>


	<!-- 회원등록  -->
	<insert id="insertUserInfo" parameterType="com.team3.rc_pro.domain.UserInfoVO">
		<selectKey order="BEFORE" keyProperty="user_num" resultType="int">
			SELECT rc_pro.seq_userno.nextval FROM dual
		</selectKey>
		INSERT INTO rc_pro.user_info
		VALUES (#{user_num},#{user_name},#{user_birth},#{user_pn},
        		#{user_address},#{user_email},#{user_id},#{user_passwd},
        		DEFAULT)
	</insert>
	
	<!-- 회원 권한 추가 -->
	<insert id="insertAuthorityInfo">
		INSERT INTO rc_pro.authority_info
		VALUES (#{user_id}, DEFAULT)
	</insert>
	
	<!-- 아이디 중복체크 -->
	<select id="iddupcheck" resultType="Long">
		SELECT COUNT(*)
		FROM rc_pro.user_info
		WHERE user_id=#{user_id}
	</select>
	
	<!-- 회원 조회(아이디로) -->
	<select id="viewuserinfo" resultMap="userinfoMap">
		<![CDATA[
		SELECT us.user_num,us.user_name,us.user_birth,us.user_pn
	    	  ,us.user_address,us.user_email,us.user_id,us.user_passwd
	    	  ,us.user_regdate,auth.user_authority
		FROM rc_pro.user_info us INNER JOIN rc_pro.authority_info auth ON us.user_id = auth.user_id
		WHERE us.user_id = #{user_id}
		]]>
	</select>

	<!-- 회원 주소조회 -->
	<select id="selectUserInfoAddress" resultMap="userinfoMap">
		SELECT user_address
		FROM rc_pro.user_info
		WHERE user_id=#{user_id}
	</select>

	<!-- 회원번호 조회 -->
	<select id="selectUsernum" resultType="int">
		SELECT user_num
		FROM rc_pro.user_info
		WHERE user_id=#{user_id}
	</select>
	
	<!-- 비밀번호 찾기후 변경  -->
	<update id="UpdateUserpw" parameterType="com.team3.rc_pro.domain.UserInfoVO">
		UPDATE rc_pro.user_info
		SET user_passwd = #{user_passwd}
		WHERE user_id = #{user_id}
	</update>
	
	<!-- 마이페이지 정보수정 -->
	<update id="UpdateUserinfo" parameterType="com.team3.rc_pro.domain.UserInfoVO">
		UPDATE rc_pro.user_info
		SET user_passwd = #{user_passwd} , user_email = #{user_email} , user_pn = #{user_pn} , user_address = #{user_address}
		WHERE user_id=#{user_id}
	</update>	
	
	<!-- 회원 비밀번호조회 -->
	<select id="selectUserpassword" resultType="String">
		SELECT user_passwd
		FROM rc_pro.user_info
		WHERE user_id=#{user_id}
	</select>	

	<!-- 이메일 중복체크 -->
	<select id="emaildupcheck" resultType="Long">
		SELECT COUNT(*)
		FROM rc_pro.user_info
		WHERE user_email=#{user_email}
	</select>
	
	<!-- 아이디 찾기 -->
	<select id="findUserid" parameterType="com.team3.rc_pro.domain.UserInfoVO" resultType="String">
		SELECT user_id 
		FROM rc_pro.user_info 
		WHERE user_email=#{user_email} AND user_name =#{user_name}
	</select>
	
	<!-- 비밀번호 찾기 -->	
	<select id="findUserpassword" parameterType="com.team3.rc_pro.domain.UserInfoVO" resultType="Long">
		SELECT COUNT(*) 
		FROM rc_pro.user_info 
		WHERE user_name=#{user_name} AND user_id =#{user_id}
	</select>
		
	<select id="selectUserInfo" resultType="com.team3.rc_pro.domain.UserInfoVO">
		SELECT * 
		FROM user_info
	</select>
	
	<!-- 회원 조회 -->
	<select id="adminViewUserinfo" resultMap="userinfoMap"
			parameterType="com.team3.rc_pro.common.paging.domain.AdminPagingDTO">
		<![CDATA[
		SELECT us.user_num, us.user_name, us.user_birth, us.user_pn, us.user_address, us.user_email, us.user_id, us.user_passwd, us.user_regdate, auth.user_authority 
		FROM ( SELECT /*+ INDEX_DESC (us PK_MYUSER_NUM) */ ROWNUM rn, us.* 
			FROM rc_pro.user_info us 
			WHERE ROWNUM <= (#{pageNum} * #{rowAmountPerPage})
		]]>
		<trim prefix="AND (" suffix=") " prefixOverrides="OR">
		   <foreach item='scope' collection="scopeArray">
		      <trim prefix="OR">
		         <choose>
		            <when test="scope == 'I'.toString()">user_id LIKE '%'||#{keyword}||'%'</when>
		            <when test="scope == 'N'.toString()">user_name LIKE '%'||#{keyword}||'%'</when>
		            <when test="scope == 'A'.toString()">user_address LIKE '%'||#{keyword}||'%'</when>
		         </choose>
		      </trim> 
		   </foreach>
		</trim>
		
		<![CDATA[
		      ) us INNER JOIN rc_pro.authority_info auth ON us.user_id = auth.user_id
		WHERE rn >= ((#{pageNum} * #{rowAmountPerPage}) - (#{rowAmountPerPage} - 1)) 
		]]>
		<foreach item='scope' collection="scopeArray">
			<if test="(scope != null and scope !='') and (scope == 'U'.toString())">
			AND auth.user_authority LIKE '%'||#{keyword}||'%'
			</if>
		</foreach>
	</select>
	
	
	<!-- 회원 총 명수 -->
	<select id="adminSelectRowTotal" resultType="long"
			parameterType="com.team3.rc_pro.common.paging.domain.AdminPagingDTO">
		SELECT COUNT(*) rowTotal FROM rc_pro.user_info us INNER JOIN rc_pro.authority_info auth ON us.user_id = auth.user_id
		<where>
		<trim prefix="(" suffix=")" prefixOverrides="OR">
		   <foreach item='scope' collection="scopeArray">
		      <trim prefix="OR">
		         <choose>
		            <when test="scope == 'I'.toString()">us.user_id LIKE '%'||#{keyword}||'%'</when>
		            <when test="scope == 'N'.toString()">us.user_name LIKE '%'||#{keyword}||'%'</when>
		            <when test="scope == 'A'.toString()">us.user_address LIKE '%'||#{keyword}||'%'</when>
		            <when test="scope == 'U'.toString()">auth.user_authority LIKE '%'||#{keyword}||'%'</when>
		         </choose>
		      </trim> 
		   </foreach>
		</trim>
		</where>
	</select>
	
	<!-- 권한 변경 -->
	<update id="updateUserAuth" parameterType="com.team3.rc_pro.domain.AuthorityInfoVO">
		UPDATE rc_pro.authority_info
		SET user_authority = #{user_authority}
		WHERE user_id = #{user_id} 
	</update>
	
</mapper>